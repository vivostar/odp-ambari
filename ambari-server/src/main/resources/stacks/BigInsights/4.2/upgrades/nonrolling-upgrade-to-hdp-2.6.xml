<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->


<upgrade xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="upgrade-pack.xsd">
  <target>2.6.*.*</target>
  <target-stack>HDP-2.6</target-stack>
  <downgrade-allowed>false</downgrade-allowed>
  <type>NON_ROLLING</type>
  <prerequisite-checks>
    <check>org.apache.ambari.server.checks.RangerAuditDbCheck</check>
    <check>org.apache.ambari.server.checks.ServicesYarnWorkPreservingCheck</check>
    <check>org.apache.ambari.server.checks.JavaVersionCheck</check>
    <check>org.apache.ambari.server.checks.RangerSSLConfigCheck</check>
    <check>org.apache.ambari.server.checks.LZOCheck</check>
    <configuration>
      <!-- Configuration properties for all pre-reqs including required pre-reqs -->
      <check-properties name="org.apache.ambari.server.checks.HiveDynamicServiceDiscoveryCheck">
        <property name="min-failure-stack-version">BigInsights-4.1</property>
      </check-properties>
      <check-properties name="org.apache.ambari.server.checks.JavaVersionCheck">
        <property name="java-version">1.8</property>
      </check-properties>
    </configuration>
  </prerequisite-checks>

  <order>
    <group xsi:type="stop" name="STOP_HIGH_LEVEL_SERVICE_COMPONENTS" title="Stop Components for High-Level Services">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>

      <service name="FLUME">
        <component>FLUME_HANDLER</component>
      </service>

      <service name="KNOX">
        <component>KNOX_GATEWAY</component>
      </service>

      <service name="KAFKA">
        <component>KAFKA_BROKER</component>
      </service>

      <service name="OOZIE">
        <component>OOZIE_SERVER</component>
      </service>

      <service name="SPARK">
        <component>SPARK_JOBHISTORYSERVER</component>
        <component>SPARK_THRIFTSERVER</component>
      </service>

      <service name="HIVE">
        <component>WEBHCAT_SERVER</component>
        <component>HIVE_SERVER</component>
        <component>HIVE_METASTORE</component>
      </service>

      <service name="YARN">
        <component>NODEMANAGER</component>
        <component>RESOURCEMANAGER</component>
        <component>APP_TIMELINE_SERVER</component>
      </service>

      <service name="MAPREDUCE2">
        <component>HISTORYSERVER</component>
      </service>
    </group>

    <group xsi:type="cluster" name="Backups" title="Perform Backups">
      <direction>UPGRADE</direction>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage service="OOZIE" component="OOZIE_SERVER" title="Backup Oozie Database">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Oozie Server database referenced by the Oozie server located on {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage service="HIVE" component="HIVE_METASTORE" title="Backup Hive Metastore">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Hive Metastore database referenced by the Hive Metastore service(s) located on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage service="KNOX" component="KNOX_GATEWAY" title="Backup Knox Data">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Knox data. E.g., "cp -RL /usr/iop/current/knox-server/data/* ~/knox_backup/" on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage service="HBASE" component="HBASE_MASTER" title="Snapshot HBASE">
        <task xsi:type="execute" hosts="master">
          <script>scripts/hbase_upgrade.py</script>
          <function>take_snapshot</function>
        </task>
      </execute-stage>

      <execute-stage service="HDFS" component="NAMENODE" title="Prepare HDFS">
        <task xsi:type="execute" hosts="master">
          <script>scripts/namenode.py</script>
          <function>prepare_express_upgrade</function>
        </task>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Backup Ranger Database">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Ranger Admin database on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage service="RANGER_KMS" component="RANGER_KMS_SERVER" title="Backup Ranger KMS Database">
        <task xsi:type="manual">
          <message>Before continuing, please backup Ranger KMS database on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>
    </group>

    <group xsi:type="stop" name="STOP_LOW_LEVEL_SERVICE_COMPONENTS" title="Stop Components for Core Services">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>

      <service name="HBASE">
        <component>HBASE_REGIONSERVER</component>
        <component>HBASE_MASTER</component>
        <component>HBASE_REST_SERVER</component>
      </service>

      <service name="HDFS">
        <component>DATANODE</component>
        <component>NAMENODE</component>
        <component>SECONDARY_NAMENODE</component>
        <component>ZKFC</component>
        <component>JOURNALNODE</component>
        <component>NFS_GATEWAY</component>
      </service>

      <service name="RANGER">
        <component>RANGER_USERSYNC</component>
        <component>RANGER_ADMIN</component>
      </service>

      <service name="RANGER_KMS">
        <component>RANGER_KMS_SERVER</component>
      </service>

      <service name="ZOOKEEPER">
        <component>ZOOKEEPER_SERVER</component>
      </service>
    </group>

    <!-- After processing this group, will change the effective Stack of the UpgradeContext object. -->
    <group xsi:type="update-stack" name="UPDATE_DESIRED_REPOSITORY_ID" title="Update Target Repositories">
      <execute-stage title="Update Target Repositories">
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.UpdateDesiredRepositoryAction">
        </task>
      </execute-stage>
    </group>

    <group xsi:type="cluster" name="CHANGE_STACK_REFERENCES" title="Change stack references">
      <direction>UPGRADE</direction>
      <skippable>false</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <execute-stage title="Change stack references">
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.ChangeStackReferencesAction"/>
      </execute-stage>
    </group>

    <group xsi:type="cluster" name="Upgrade service configs" title="Upgrade service configs">
      <direction>UPGRADE</direction>    <!--  prevent config changes on downgrade -->
      <skippable>true</skippable>       <!-- May fix configuration problems manually -->
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <!-- KAFKA -->
      <!-- BigInsights used to have security.inter.broker.protocol=SASL_PLAINTEXT but the preferred value in HDP 2.6
      is PLAINTEXTSASL and set also set listeners to use the same value, only when the cluster is kerberized. -->
      <execute-stage service="KAFKA" component="KAFKA_BROKER" title="Apply Kerberos config changes for Kafka">
        <condition xsi:type="security" type="kerberos"/>
        <task xsi:type="configure" id="hdp_2_6_fix_kafka_protocol">
          <summary>Apply Kerberos config changes for Kafka</summary>
        </task>
      </execute-stage>

      <!-- HDFS -->
      <execute-stage service="HDFS" component="NAMENODE" title="Apply config changes for Hadoop NameNode">
        <task xsi:type="configure" id="biginsights_4_2_namenode_update_hadoop_env" />
      </execute-stage>

      <!-- HDFS -->
      <execute-stage service="HDFS" component="NAMENODE" title="Apply config changes for Hadoop NameNode">
        <task xsi:type="configure" id="biginsights_4_2_namenode_adjustments" />
      </execute-stage>

      <!-- HDFS -->
      <execute-stage service="HDFS" component="NAMENODE" title="Adding HDFS ZKFC Security ACLs">
        <task xsi:type="configure" id="hadoop_env_zkfc_security_opts">
          <summary>Adding HDFS ZKFC Security ACLs</summary>
        </task>
      </execute-stage>

      <execute-stage service="HDFS" component="NAMENODE" title="Enable custom extensions in core-site">
        <task xsi:type="configure" id="biginsights_4_2_core_site_custom_extensions">
          <summary>Enable custom extensions in core-site</summary>
        </task>
      </execute-stage>

      <execute-stage service="YARN" component="NAMENODE" title="Apply config changes for HDFS related to Ranger">
        <task xsi:type="configure" id="hdp_2_6_0_0_remove_ranger_hdfs_audit_db"/>
      </execute-stage>

      <!-- core-site -->
      <execute-stage title="Fix auth_to_local mapping">
        <condition xsi:type="security" type="kerberos"/>
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.FixAuthToLocalMappingAction">
          <summary>Fix auth to local mapping rules</summary>
        </task>
      </execute-stage>

      <!-- YARN -->
      <execute-stage service="YARN" component="RESOURCEMANAGER" title="Update Yarn configurations">
        <task xsi:type="configure" id="biginsights_4_2_yarn_config_update" />
      </execute-stage>

      <execute-stage service="YARN" component="RESOURCEMANAGER" title="Apply config changes for YARN related to Ranger">
        <task xsi:type="configure" id="hdp_2_6_0_0_remove_ranger_yarn_audit_db"/>
      </execute-stage>

      <!-- YARN -->
      <execute-stage service="YARN" component="RESOURCEMANAGER" title="Adding YARN Security ACLs">
        <task xsi:type="configure" id="yarn_env_security_opts">
          <summary>Adding YARN Security ACLs</summary>
        </task>
      </execute-stage>

      <!-- YARN -->
      <execute-stage service="MAPREDUCE2" component="HISTORYSERVER" title="Apply config changes for HistoryServer">
        <task xsi:type="configure" id="biginsights_4_2_mapreduce_application_framework_patch" />
      </execute-stage>

      <!-- PIG -->
      <execute-stage service="PIG" component="PIG" title="Apply config changes for Pig">
        <task xsi:type="configure" id="biginsights_4_2_pig_exectype_change" />
      </execute-stage>

      <!-- HBASE -->
      <execute-stage service="HBASE" component="HBASE_MASTER" title="Apply config changes for HBase">
        <task xsi:type="configure" id="biginsights_4_2_hbase_env_config" />
      </execute-stage>

      <execute-stage service="HBASE" component="HBASE_MASTER" title="Enable custom extensions for HBASE">
        <task xsi:type="configure" id="biginsights_4_2_hbase_site_custom_extensions"/>
      </execute-stage>

      <execute-stage service="HBASE" component="HBASE_MASTER" title="Enable custom extensions for HBASE">
        <task xsi:type="configure" id="biginsights_4_2_hbase_env_custom_extensions"/>
      </execute-stage>

      <execute-stage service="HBASE" component="HBASE_MASTER" title="Apply config changes for HBASE related to Ranger">
        <task xsi:type="configure" id="hdp_2_6_0_0_remove_ranger_hbase_audit_db"/>
      </execute-stage>

      <!-- HIVE -->
      <execute-stage service="HIVE" component="HIVE_CLIENT" title="Update Hive Execution Engine">
        <task xsi:type="configure" id="biginsights_4_2_hive_exectype_change"/>
      </execute-stage>
      <execute-stage service="HIVE" component="HIVE_SERVER" title="Apply config changes for Hive Server">
        <task xsi:type="configure" id="biginsights_4_2_hive_env_configure"/>
      </execute-stage>
      <execute-stage service="HIVE" component="HIVE_SERVER" title="Apply permission config changes for Hive Server">
        <task xsi:type="configure" id="biginsights_4_2_hive_permissions"/>
      </execute-stage>
      <execute-stage service="HIVE" component="HIVE_SERVER" title="Apply config changes for Hive Server">
        <task xsi:type="configure" id="biginsights_4_2_hive_server_configure_authentication"/>
      </execute-stage>

      <execute-stage service="HIVE" component="HIVE_SERVER" title="Enable custom extensions for Hive Server">
        <task xsi:type="configure" id="biginsights_4_2_hive_env_custom_extensions"/>
      </execute-stage>

      <execute-stage service="HIVE" component="HIVE_SERVER" title="Apply config changes for HIVE related to Ranger">
        <task xsi:type="configure" id="hdp_2_6_0_0_remove_ranger_hive_audit_db"/>
      </execute-stage>

      <execute-stage service="HIVE" component="WEBHCAT_SERVER" title="Apply config changes for Hive WebHCat server">
        <task xsi:type="configure" id="biginsights_4_2_webhcat_server_update_environment_configurations" />
      </execute-stage>
      <execute-stage service="HIVE" component="WEBHCAT_SERVER" title="Apply config changes for Hive WebHCat server">
        <task xsi:type="configure" id="biginsights_4_2_webhcat_server_update_configurations" />
      </execute-stage>
      
      <!-- SPARK -->
      <execute-stage service="SPARK" component="SPARK_THRIFTSERVER" title="Apply config changes for Spark Thrift server">
        <task xsi:type="configure" id="biginsights_4_2_spark_hive_site_override" />
      </execute-stage>
      <execute-stage service="SPARK" component="SPARK_THRIFTSERVER" title="Apply config changes for Spark Thrift server">
        <task xsi:type="configure" id="biginsights_4_2_spark_env" />
      </execute-stage>

      <!-- OOZIE -->
      <execute-stage service="OOZIE" component="OOZIE_SERVER" title="Apply config changes for Oozie server">
        <task xsi:type="configure" id="biginsights_4_2_oozie_server_update_configurations" />
      </execute-stage>
      <execute-stage service="OOZIE" component="OOZIE_SERVER" title="Apply config changes for Oozie server">
        <task xsi:type="configure" id="biginsights_4_2_oozie_server_update_environment_configurations" />
      </execute-stage>
      <execute-stage service="OOZIE" component="OOZIE_SERVER" title="Apply config changes for Oozie server">
        <task xsi:type="configure" id="biginsights_4_2_oozie_server_update_environment_tomcat" />
      </execute-stage>

      <!-- RANGER -->
      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Apply config changes for Ranger Admin">
        <task xsi:type="configure" id="hdp_2_5_0_0_remove_audit_db_flag"/>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Apply config changes for Ranger Admin">
        <task xsi:type="configure" id="hdp_2_5_0_0_remove_audit_db_admin_properties"/>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Apply config changes for Ranger Admin">
        <task xsi:type="configure" id="hdp_2_5_0_0_remove_audit_db_ranger_admin_site"/>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Apply config changes for Ranger Admin">
        <task xsi:type="configure" id="hdp_2_5_0_0_remove_sso_property"/>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Calculating Ranger Properties">
        <condition xsi:type="security" type="kerberos"/>
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.RangerKerberosConfigCalculation">
          <summary>Calculating Ranger Properties</summary>
        </task>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Configuring Ranger Alerts">
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.RangerWebAlertConfigAction">
          <summary>Configuring Ranger Alerts</summary>
        </task>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Apply config changes for Ranger Admin">
        <task xsi:type="configure" id="hdp_2_6_0_0_remove_bind_anonymous"/>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_USERSYNC" title="Apply config changes for Ranger Usersync">
        <task xsi:type="configure" id="hdp_2_6_0_0_disable_delta_sync_during_upgrade"/>
      </execute-stage>

      <!-- RANGER KMS -->
      <execute-stage service="RANGER_KMS" component="RANGER_KMS_SERVER" title="Apply config changes for Ranger KMS Server">
        <task xsi:type="configure" id="hdp_2_6_0_0_remove_ranger_kms_audit_db"/>
      </execute-stage>

      <execute-stage service="RANGER_KMS" component="RANGER_KMS_SERVER" title="Parameterizing Ranger Kms Log4J Properties">
        <task xsi:type="configure" id="kms_log4j_parameterize">
          <summary>Updating the KMS Log4J properties to include parameterizations</summary>
        </task>
      </execute-stage>

      <execute-stage service="RANGER_KMS" component="RANGER_KMS_SERVER" title="Calculating Ranger Properties">
        <condition xsi:type="security" type="kerberos"/>
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.RangerKmsProxyConfig">
          <summary>Adding Ranger proxy user properties</summary>
        </task>
      </execute-stage>

      <execute-stage service="RANGER_KMS" component="RANGER_KMS_SERVER" title="Apply config changes for Ranger KMS">
        <task xsi:type="configure" id="hdp_2_6_0_0_remove_ranger_kms_duplicate_ssl"/>
      </execute-stage>

      <!-- KNOX -->
      <execute-stage service="KNOX" component="KNOX_GATEWAY" title="Apply config changes for KNOX related to Ranger">
        <task xsi:type="configure" id="hdp_2_6_0_0_remove_ranger_knox_audit_db"/>
      </execute-stage>
    </group>


    <!--
    After processing this group, the user-specified Kerberos descriptor will be updated to work with
    the new stack-level Kerberos descriptor.
    -->
    <group xsi:type="cluster" name="UPDATE_KERBEROS_DESCRIPTORS" title="Update Kerberos Descriptors">
      <condition xsi:type="security" type="kerberos"/>
      <execute-stage title="Update the user-specified Kerberos descriptor">
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.UpgradeUserKerberosDescriptor"/>
      </execute-stage>
    </group>

    <!--
    Invoke "hdp-select set all" to change any components we may have missed
    that are installed on the hosts but not known by Ambari.
    -->
    <group xsi:type="cluster" name="ALL_HOST_OPS" title="Set Version On All Hosts">
      <scope>COMPLETE</scope>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage title="Update stack to {{version}}">
        <task xsi:type="execute">
          <script>scripts/ru_set_all.py</script>
          <function>actionexecute</function>
        </task>
      </execute-stage>
    </group>

    <!-- Now, restart all of the services. -->
    <group xsi:type="restart" name="ZOOKEEPER" title="ZooKeeper">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>
      <service name="ZOOKEEPER">
        <component>ZOOKEEPER_SERVER</component>
        <component>ZOOKEEPER_CLIENT</component>
      </service>
    </group>

    <group xsi:type="restart" name="RANGER" title="Ranger">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>
      <service name="RANGER">
        <component>RANGER_ADMIN</component>
        <component>RANGER_USERSYNC</component>
        <component>RANGER_TAGSYNC</component>
      </service>
    </group>

    <group xsi:type="restart" name="HDFS" title="HDFS">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>
      <service name="HDFS">
        <component>JOURNALNODE</component>
        <component>ZKFC</component>
        <component>NAMENODE</component>
        <component>SECONDARY_NAMENODE</component>
        <component>NFS_GATEWAY</component>
        <component>HDFS_CLIENT</component>
      </service>
    </group>

    <group xsi:type="restart" name="HDFS_DATANODES" title="HDFS DataNodes">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>
      <service name="HDFS">
        <component>DATANODE</component>
      </service>
    </group>

    <group xsi:type="cluster" name="HDFS_LEAVE_SAFEMODE" title="HDFS - Wait to leave Safemode">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage service="HDFS" component="NAMENODE" title="Wait to leave Safemode">
        <task xsi:type="execute" hosts="all">
          <summary>Wait for NameNode to leave Safemode</summary>
          <script>scripts/namenode.py</script>
          <function>wait_for_safemode_off</function>
        </task>
      </execute-stage>
    </group>

    <group xsi:type="restart" name="RANGER_KMS" title="Ranger KMS">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>
      <service name="RANGER_KMS">
        <component>RANGER_KMS_SERVER</component>
      </service>
    </group>

    <group xsi:type="restart" name="KAFKA" title="Kafka">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>
      <service name="KAFKA">
        <component>KAFKA_BROKER</component>
      </service>
    </group>

    <group xsi:type="restart" name="YARN_AND_MAPR" title="YARN and MapReduce2">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>

      <service name="MAPREDUCE2">
        <component>HISTORYSERVER</component>
        <component>MAPREDUCE2_CLIENT</component>
      </service>

      <service name="YARN">
        <component>APP_TIMELINE_SERVER</component>
        <component>RESOURCEMANAGER</component>
        <component>YARN_CLIENT</component>
      </service>
    </group>

    <group xsi:type="restart" name="YARN_NODEMANAGERS" title="YARN NodeManagers">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>

      <service name="YARN">
        <component>NODEMANAGER</component>
      </service>
    </group>

    <group xsi:type="cluster" name="START_YARN_QUEUES" title="Start YARN Queues">
      <direction>UPGRADE</direction>
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>

      <execute-stage service="YARN" component="RESOURCEMANAGER" title="Start YARN Queues">
        <condition xsi:type="config" type="yarn-site" property="yarn.resourcemanager.work-preserving-recovery.enabled" value="true" comparison="not-equals"/>
        <task xsi:type="manual">
          <message>Before continuing, please start all YARN queues.</message>
        </task>
      </execute-stage>
    </group>

    <group xsi:type="restart" name="HBASE" title="HBASE">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>
      <service name="HBASE">
        <component>HBASE_MASTER</component>
        <component>HBASE_REGIONSERVER</component>
        <component>HBASE_CLIENT</component>
        <component>HBASE_REST_SERVER</component>
      </service>
    </group>

    <group xsi:type="restart" name="CLIENTS" title="Pig, Sqoop Clients">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>
      <service name="PIG">
        <component>PIG</component>
      </service>

      <service name="SQOOP">
        <component>SQOOP</component>
      </service>
    </group>

    <group name="SERVICE_CHECK_1" title="All Service Checks" xsi:type="service-check">
      <direction>UPGRADE</direction>
      <skippable>true</skippable>
      <priority>
        <service>ZOOKEEPER</service>
        <service>RANGER</service>
        <service>RANGER_KMS</service>
        <service>HDFS</service>
        <service>KAFKA</service>
        <service>YARN</service>
        <service>MAPREDUCE2</service>
        <service>HBASE</service>
      </priority>
    </group>

    <!-- Slider must be upgraded before higher-level apps that need to run apps on Slider, such as Hive. -->
    <group xsi:type="restart" name="SLIDER" title="Slider">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>
      <service name="SLIDER">
        <component>SLIDER</component>
      </service>
    </group>

    <group xsi:type="restart" name="HIVE_MASTERS" title="Hive Masters">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <!-- Must be ran sequentially because Hive Metastore upgrades the schema and Hive Server copies tarballs. -->
      <parallel-scheduler>
        <max-degree-of-parallelism>1</max-degree-of-parallelism>
      </parallel-scheduler>
      <service name="HIVE">
        <component>HIVE_METASTORE</component>
        <component>HIVE_SERVER</component>
        <component>WEBHCAT_SERVER</component>
      </service>
    </group>

    <group xsi:type="restart" name="HIVE_CLIENTS" title="Hive Clients">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>
      <service name="HIVE">
        <component>HIVE_CLIENT</component>
        <component>HCAT</component>
      </service>
    </group>

    <group xsi:type="restart" name="SPARK" title="Spark">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>
      <service name="SPARK">
        <component>SPARK_JOBHISTORYSERVER</component>
        <component>SPARK_THRIFTSERVER</component>
      </service>
    </group>

    <group xsi:type="restart" name="SPARK_CLIENTS" title="Spark Clients">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>
      <service name="SPARK">
        <component>SPARK_CLIENT</component>
      </service>
    </group>

    <!-- Upgrade Oozie DB only on Upgrade direction, and always create a new ShareLib. -->
    <group name="UPGRADE_OOZIE" title="Upgrade Oozie Database">
      <direction>UPGRADE</direction>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <execute-stage service="OOZIE" component="OOZIE_SERVER" title="Upgrade Oozie Database">
        <task xsi:type="execute" hosts="any">
          <summary>Upgrading the database and creating a new sharelib</summary>
          <script>scripts/oozie_server_upgrade.py</script>
          <function>upgrade_oozie_database_and_sharelib</function>
        </task>
      </execute-stage>
    </group>

    <group xsi:type="restart" name="OOZIE" title="Oozie">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler/>
      <service name="OOZIE">
        <component>OOZIE_SERVER</component>
      </service>
    </group>

    <group xsi:type="restart" name="OOZIE_CLIENTS" title="Oozie Clients">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>
      <service name="OOZIE">
        <component>OOZIE_CLIENT</component>
      </service>
    </group>

    <group name="SERVICE_CHECK_2" title="All Service Checks" xsi:type="service-check">
      <direction>UPGRADE</direction>
      <skippable>true</skippable>
      <priority>
        <service>SLIDER</service>
        <service>HIVE</service>
        <service>SPARK</service>
        <service>OOZIE</service>
      </priority>
    </group>

    <group xsi:type="restart" name="KNOX" title="Knox">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>
      <service name="KNOX">
        <component>KNOX_GATEWAY</component>
      </service>
    </group>

    <group xsi:type="restart" name="FLUME" title="Flume">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler/>
      <service name="FLUME">
        <component>FLUME_HANDLER</component>
      </service>
    </group>

    <group name="SERVICE_CHECK_3" title="All Service Checks" xsi:type="service-check">
      <direction>UPGRADE</direction>
      <skippable>true</skippable>
      <priority>
        <service>KNOX</service>
        <service>FLUME</service>
      </priority>
    </group>

    <group xsi:type="cluster" name="FINALIZE_PRE_CHECK" title="Finalize {{direction.text.proper}} Pre-Check">
      <direction>UPGRADE</direction>
      
      <execute-stage title="Check Component Versions">
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckAction" />
      </execute-stage>
    </group>

    <group xsi:type="cluster" name="POST_CLUSTER" title="Finalize {{direction.text.proper}}">
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage title="Confirm Finalize">
        <direction>UPGRADE</direction>
        <task xsi:type="manual">
          <message>Please confirm you are ready to finalize.</message>
        </task>
      </execute-stage>

      <execute-stage service="HBASE" component="HBASE_MASTER" title="Delete HBase snapshots">
        <direction>UPGRADE</direction>
        <task xsi:type="manual">
          <message>You can now remove any HBase snapshots which were created at the beginning of the upgrade. To see existing snapshots, use the following HBase shell command:</message>
          <message>hbase> list_snapshots</message>
          <message>Once you have found an existing snapshot which you would like to remove, you can use the following command:</message>
          <message>hbase> delete_snapshot 'snapshotName'</message>
        </task>
      </execute-stage>

      <execute-stage service="HDFS" component="NAMENODE" title="Execute HDFS Finalize">
        <task xsi:type="execute" hosts="master">
          <script>scripts/namenode.py</script>
          <function>finalize_non_rolling_upgrade</function>
        </task>
      </execute-stage>

      <execute-stage title="Save Cluster State">
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.FinalizeUpgradeAction">
        </task>
      </execute-stage>
    </group>
  </order>

  <processing>
    <service name="ZOOKEEPER">
      <component name="ZOOKEEPER_SERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="ZOOKEEPER_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="RANGER">
      <component name="RANGER_ADMIN">
        <pre-upgrade>

          <task xsi:type="execute" hosts="all">
            <script>scripts/ranger_admin.py</script>
            <function>set_pre_start</function>
          </task>

          <task xsi:type="execute" hosts="any">
            <summary>Upgrading Ranger database schema</summary>
            <script>scripts/ranger_admin.py</script>
            <function>setup_ranger_database</function>
          </task>

          <task xsi:type="configure_function" hosts="all" />

          <task xsi:type="execute" hosts="any">
            <summary>Applying Ranger java patches</summary>
            <script>scripts/ranger_admin.py</script>
            <function>setup_ranger_java_patches</function>
          </task>
        </pre-upgrade>

        <pre-downgrade copy-upgrade="true" />

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>

      </component>

      <component name="RANGER_USERSYNC">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="RANGER_TAGSYNC">

        <pre-upgrade>
          <task xsi:type="execute" hosts="all">
            <script>scripts/ranger_tagsync.py</script>
            <function>configure_atlas_user_for_tagsync</function>
          </task>
        </pre-upgrade>

        <pre-downgrade copy-upgrade="true" />

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="HDFS">
      <component name="NAMENODE">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="DATANODE">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HDFS_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="JOURNALNODE">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="ZKFC">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="NFS_GATEWAY">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="RANGER_KMS">
      <component name="RANGER_KMS_SERVER">
        <pre-upgrade>
          <task xsi:type="execute" hosts="any" sequential="true">
            <summary>Upgrading Ranger KMS database schema</summary>
            <script>scripts/kms_server.py</script>
            <function>setup_ranger_kms_database</function>
          </task>
        </pre-upgrade>

        <pre-downgrade>
          <task xsi:type="execute" hosts="any" sequential="true">
            <summary>Downgrading Ranger KMS database schema</summary>
            <script>scripts/kms_server.py</script>
            <function>setup_ranger_kms_database</function>
          </task>
        </pre-downgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="MAPREDUCE2">
      <component name="HISTORYSERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="MAPREDUCE2_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="YARN">
      <component name="APP_TIMELINE_SERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="RESOURCEMANAGER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="NODEMANAGER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="YARN_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="KAFKA">
      <component name="KAFKA_BROKER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="HBASE">
      <component name="HBASE_MASTER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HBASE_REGIONSERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HBASE_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HBASE_REST_SERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="PIG">
      <component name="PIG">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="SQOOP">
      <component name="SQOOP">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="HIVE">
      <component name="HIVE_METASTORE">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HIVE_SERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="WEBHCAT_SERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HIVE_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="HCAT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="SPARK">
      <component name="SPARK_JOBHISTORYSERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
      <component name="SPARK_THRIFTSERVER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
      <component name="SPARK_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="OOZIE">
      <component name="OOZIE_SERVER">
        <pre-upgrade>
          <!-- It is extremely important that both of these tasks run on the exact same host. Hence, pick the first alphabetically. -->
          <task xsi:type="configure_function" hosts="first" />

          <task xsi:type="execute" hosts="first" sequential="true">
            <summary>Upgrading the Oozie database and creating a new sharelib</summary>
            <script>scripts/oozie_server_upgrade.py</script>
            <function>upgrade_oozie_database_and_sharelib</function>
          </task>
        </pre-upgrade>

        <pre-downgrade>
          <task xsi:type="execute" hosts="any" sequential="true">
            <summary>Create a new sharelib</summary>
            <script>scripts/oozie_server_upgrade.py</script>
            <function>create_sharelib</function>
          </task>
        </pre-downgrade>

        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>

      <component name="OOZIE_CLIENT">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="KNOX">
      <component name="KNOX_GATEWAY">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="SLIDER">
      <component name="SLIDER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>

    <service name="FLUME">
      <component name="FLUME_HANDLER">
        <upgrade>
          <task xsi:type="restart-task"/>
        </upgrade>
      </component>
    </service>
  </processing>
</upgrade>
