<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<configuration supports_final="true" supports_do_not_extend="true">

  <property>
    <name>spark.eventLog.enabled</name>
    <value>true</value>
    <description>Whether to log Spark events, useful for reconstructing the Web UI after the application has finished.</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.eventLog.dir</name>
    <value>/iop/apps/4.2.0.0/spark/logs/history-server</value>
    <description>Base directory in which Spark events are logged, if spark.eventLog.enabled is true. Within this base directory, Spark creates a sub-directory for each application, and logs the events specific to the application in this directory. Users may want to set this to a unified location like an HDFS directory so history files can be read by the history server.</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.yarn.executor.memoryOverhead</name>
    <value>384</value>
    <description>
      The amount of off heap memory (in megabytes) to be allocated per executor.
      This is memory that accounts for things like VM overheads, interned strings,
      other native overheads, etc.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.yarn.driver.memoryOverhead</name>
    <value>384</value>
    <description>
      The amount of off heap memory (in megabytes) to be allocated per driver.
      This is memory that accounts for things like VM overheads, interned strings,
      other native overheads, etc.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.yarn.applicationMaster.waitTries</name>
    <value>10</value>
    <description>
      Set the number of times the ApplicationMaster waits for the the Spark master and then
      also the number of tries it waits for the SparkContext to be initialized.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.yarn.scheduler.heartbeat.interval-ms</name>
    <value>5000</value>
    <description>
      The interval in ms in which the Spark application master heartbeats into the YARN ResourceManager.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.yarn.max.executor.failures</name>
    <value>3</value>
    <description>
      The maximum number of executor failures before failing the application.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.yarn.queue</name>
    <value>default</value>
    <description>
      The name of the YARN queue to which the application is submitted.
    </description>
    <on-ambari-upgrade add="false"/>
  </property>

  <property>
    <name>spark.yarn.containerLauncherMaxThreads</name>
    <value>25</value>
    <description>
      The maximum number of threads to use in the application master for launching executor containers.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.yarn.submit.file.replication</name>
    <value>3</value>
    <description>
      HDFS replication level for the files uploaded into HDFS for the application.
      These include things like the Spark jar, the app jar, and any distributed cache files/archives.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.yarn.preserve.staging.files</name>
    <value>false</value>
    <description>
      Set to true to preserve the staged files (Spark jar, app jar, distributed cache files) at the 
      end of the job rather then delete them.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.history.ui.port</name>
    <value>18080</value>
    <description>
      The port to which the web interface of the History Server binds.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>spark.driver.extraJavaOptions</name>
    <value>-Diop.version={{iop_full_version}}</value>
    <description>
      Specifies parameters that are passed to the JVM of the Spark driver.
    </description>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.yarn.am.extraJavaOptions</name>
    <value>-Diop.version={{iop_full_version}}</value>
    <description>
      Specifies the parameters that are passed to the JVM of the Spark Application Master.
    </description>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.history.kerberos.principal</name>
    <value>none</value>
    <description>
      Kerberos principal name for the Spark History Server.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>spark.history.kerberos.keytab</name>
    <value>none</value>
    <description>
      Location of the kerberos keytab file for the Spark History Server.
    </description>
    <on-ambari-upgrade add="true"/>
  </property>
</configuration>
